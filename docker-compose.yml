version: '3'
networks:
 db_network:
services:
 nginx:
  image: nginx:stable-alpine
  container_name: nginx
  ports:
   - "8088:80"
  volumes:
   - ./back-end:/var/www/html
   - ./nginx/default.conf:/etc/nginx/conf.d
  depends_on:
   - php
   - mysql
   - postgres
  networks:
   - db_network

 mysql:
  image: mysql:5.7.22
  container_name: mysql
  restart: unless-stopped 
  tty: true
  ports:
   - "4306:3306"
  volumes:
   - ./mysql:/var/lib/mysql
  environment:
   MYSQL_DATABASE: mangorx_dev_db
   MYSQL_USER: root
   MYSQL_PASSWORD: root
   MYSQL_ROOT_PASSWORD: root
   SERVICE_TAGS: dev
   SERVICE_NAME: mysql
  networks:
   - db_network

 postgres:
  image: postgres:12.7-alpine
  container_name: postgres
  restart: always
  tty: true
  ports:
   - "5432:5432"
  volumes:
   - ./mysql:/var/lib/postgres
  environment:
   POSTGRES_DB: mangorx_dev_db
   POSTGRES_USER: root
   POSTGRES_PASSWORD: root
  networks:
   - db_network

 pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5000:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    networks:
      - db_network

 php:
  build:
   context: .
   dockerfile: ./back-end/Dockerfile
  container_name: php
  volumes:
   - ./back-end:/var/www/html
  ports:
   - "9000:9000"
  networks:
   - db_network

 phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    depends_on:
      - mysql
    ports:
      - "8090:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: secret
    networks:
      - db_network

 node:
    build:
      context: .
      dockerfile: ./front-end/Dockerfile
    container_name: node
    volumes:
      - ./:/usr/src/app
    command: sh -c "cd front-end && npm run dev"
    ports:
      - "8089:3000"